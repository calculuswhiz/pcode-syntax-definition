{
    "patterns": [
        {
            "name": "keyword.name.AS.keywords", 
            "match": "\\b(package|public|private|protected|static|dynamic|var|code|const|method|name|returns|body|maxstack|localcount|initscopedepth|maxscopedepth|param|paramname|flag|optional|const|try|trait|dispid|slotid|value)\\b",
            "comment" : "When you export pcode using JPEXS Free Flash Decompiler, you get a .pcode file."
        },
        {
            "name": "keyword.name.import",
            "match": "\\b(import)[ \t]*(.*?)(?=;)\\b",
            "captures": {
                "2": { "name": "string.quoted" }
            }
        },
        {  "name": "support.constant.pcode.instructions",
           "match": "\\b(?>getproperty|getlocal(_[0-3])?|add(_[di])?|applytype|astype(late)?|bit(and|not|or|xor)|bkpt(line)?|call(interface|method|property|proplex|propvoid|static|super(id|void)?)|checkfilter|coerce(_[abdiosu])?|concat|construct(prop|super)?|convert_[bdiosu]|debug(file|line)?|declocal(_i)?|decrement(_i)?|deleteproperty(late)?|divide|dup|dxns(late)?|equals|esc_x(attr|elem)|find(def|propglobal(strict)?|property|propstrict)|get(descendants|globalscope|globalslot|lex|outerscope|scopeobject|slot|super)|(greater|less)(equals|than)|hasnext[2]?|if(false|(strict)?(eq|ne)|true|n?[gl][et])|inclocal(_i)?|increment(_i)?|initproperty|instanceof|in|istype(late)?|jump|kill|label|[ls]f(32|64)|[ls]i(8|16|32)|lookupswitch|[lr]shift|modulo|multiply(_i)?|negate(_i)?|new(activation|array|catch|class|function|object)|next(name|value)|not|pop(scope)?|push(byte|constant|double|false|int|namespace|nan|null|scope|short|string|true|uint|undefined|with)|return(value|void)|setlocal(_[0-3])?|set(globalslot|property(late)?|slot|super)|strictequals|subtract(_i)?|swap|sxi(16?|8)|throw|typeof|urshift|nop)\\b",
           "comment": "I tried to optimize, but it really didn't seem to make much of a difference. Oh, well."
        },
        {  "name": "entity.name.function.functionnames",
           "match": "\\b([a-zA-Z_]\\w*)(?=\\()\\b"
        },
        {
            "name": "storage.type",
            "match": "\\b(class|Boolean|Number|void|String|u?int|function)\\b"
        },
        {  "name": "storage.type",
           "match": "\\b(?<=:)\\w[\\w.<>]*(?= =|;)"
        },
        {  "name": "variable.parameter",
           "match": "\\b(?<=var )\\w+(?=([:;]| =))"
        },
        { "name": "keyword.label.AVM2",
          "match": "\\b(ofs[0-9a-f]{4}[:]?)",
          "comment": "Assembly label/symbols."
        },
        {  "name": "pcode.function.params",
           "match": "\\b([a-zA-Z_]\\w*):(\\w[\\w.<>]+)\\b",
           "captures": {
               "1": { "name": "variable.parameter" },
               "2": { "name": "storage.type" }
           }
        },
        {  "name": "storage.other.extends",
           "match": "\\b(extends)\\b"
        },
        {  "name": "constant.language",
           "match": "\\b(null|true|false)\\b"
        },
        {  "name": "constant.language",
           "match": "\\b(?<=const )[0-9A-Z]+(?=[:;])"
        },
        {  "name": "constant.language.flags",
           "match": "\\b(EXPLICIT|HAS_OPTIONAL|HAS_PARAM_NAMES|IGNORE_REST|NEED_ACTIVATION|NEED_ARGUMENTS|NEED_REST|SET_DXNS)\\b"
        },
        {  "name": "constant.numeric.float",
           "match": "(?<!\\w)[+-]?([0-9]*\\.?[0-9]+)([eE][+-]?[0-9]+)?\\b"
        },
        {
            "name": "constant.numeric.decimal", 
            "match": "(?<!\\w)[-]?[0-9][0-9]*\\b"
        },
        {  "name": "markup.italic.markdown",
           "match": "\\s*(;) (?i:([0-9a-f]{2} )*[0-9a-f]{2})$",
           "captures": {
               "1": { "name": "comment" }
           }
        },
        {  "name": "invalid.warnings",
           "match": "\\b(exception((start|end|target)[ \t]*[0-9]+)?)\\b",
           "comment": "Exceptions."
        },
        {
            "name": "string.quoted",
            "match": "([\"'].*?(?<![^\\\\][\\\\])[\"'])"
        }
    ], 
    "uuid": "5676e49e-71d3-40d3-8090-bb6ddff63d29", 
    "fileTypes": [
        "pcode"
    ], 
    "name": "AVM2 pcode",
    "scopeName": "source.s"
}
