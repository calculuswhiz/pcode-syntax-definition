<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>pcode</string>
	</array>
	<key>name</key>
	<string>AVM2 pcode</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>comment</key>
			<string>When you export pcode using JPEXS Free Flash Decompiler, you get a .pcode file.</string>
			<key>match</key>
			<string>\b(package|public|private|protected|static|dynamic|var|code|const|method|name|returns|body|maxstack|localcount|initscopedepth|maxscopedepth|param|paramname|flag|optional|const|try|trait|dispid|slotid|value)\b</string>
			<key>name</key>
			<string>keyword.name.AS.keywords</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.quoted</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(import)[ 	]*(.*?)(?=;)\b</string>
			<key>name</key>
			<string>keyword.name.import</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>I tried to optimize, but it really didn't seem to make much of a difference. Oh, well.</string>
			<key>match</key>
			<string>\b(?&gt;getproperty|getlocal(_[0-3])?|add(_[di])?|applytype|astype(late)?|bit(and|not|or|xor)|bkpt(line)?|call(interface|method|property|proplex|propvoid|static|super(id|void)?)|checkfilter|coerce(_[abdiosu])?|concat|construct(prop|super)?|convert_[bdiosu]|debug(file|line)?|declocal(_i)?|decrement(_i)?|deleteproperty(late)?|divide|dup|dxns(late)?|equals|esc_x(attr|elem)|find(def|propglobal(strict)?|property|propstrict)|get(descendants|globalscope|globalslot|lex|outerscope|scopeobject|slot|super)|(greater|less)(equals|than)|hasnext[2]?|if(false|(strict)?(eq|ne)|true|n?[gl][et])|inclocal(_i)?|increment(_i)?|initproperty|instanceof|in|istype(late)?|jump|kill|label|[ls]f(32|64)|[ls]i(8|16|32)|lookupswitch|[lr]shift|modulo|multiply(_i)?|negate(_i)?|new(activation|array|catch|class|function|object)|next(name|value)|not|pop(scope)?|push(byte|constant|double|false|int|namespace|nan|null|scope|short|string|true|uint|undefined|with)|return(value|void)|setlocal(_[0-3])?|set(globalslot|property(late)?|slot|super)|strictequals|subtract(_i)?|swap|sxi(16?|8)|throw|typeof|urshift|nop)\b</string>
			<key>name</key>
			<string>support.constant.pcode.instructions</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b([a-zA-Z_]\w*)(?=\()\b</string>
			<key>name</key>
			<string>entity.name.function.functionnames</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(class|Boolean|Number|void|String|u?int|function)\b</string>
			<key>name</key>
			<string>storage.type</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?&lt;=:)\w[\w.&lt;&gt;]*(?= =|;)</string>
			<key>name</key>
			<string>storage.type</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?&lt;=var )\w+(?=([:;]| =))</string>
			<key>name</key>
			<string>variable.parameter</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Assembly label/symbols.</string>
			<key>match</key>
			<string>\b(ofs[0-9a-f]{4}[:]?)</string>
			<key>name</key>
			<string>keyword.label.AVM2</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.parameter</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b([a-zA-Z_]\w*):(\w[\w.&lt;&gt;]+)\b</string>
			<key>name</key>
			<string>pcode.function.params</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(extends)\b</string>
			<key>name</key>
			<string>storage.other.extends</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(null|true|false)\b</string>
			<key>name</key>
			<string>constant.language</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?&lt;=const )[0-9A-Z]+(?=[:;])</string>
			<key>name</key>
			<string>constant.language</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(EXPLICIT|HAS_OPTIONAL|HAS_PARAM_NAMES|IGNORE_REST|NEED_ACTIVATION|NEED_ARGUMENTS|NEED_REST|SET_DXNS)\b</string>
			<key>name</key>
			<string>constant.language.flags</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;!\w)[+-]?([0-9]*\.?[0-9]+)([eE][+-]?[0-9]+)?\b</string>
			<key>name</key>
			<string>constant.numeric.float</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?&lt;!\w)[-]?[0-9][0-9]*\b</string>
			<key>name</key>
			<string>constant.numeric.decimal</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>comment</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\s*(;) (?i:([0-9a-f]{2} )*[0-9a-f]{2})$</string>
			<key>name</key>
			<string>markup.italic.markdown</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Exceptions.</string>
			<key>match</key>
			<string>\b(exception((start|end|target)[ 	]*[0-9]+)?)\b</string>
			<key>name</key>
			<string>invalid.warnings</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(["'].*?(?&lt;![^\\][\\])["'])</string>
			<key>name</key>
			<string>string.quoted</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.s</string>
	<key>uuid</key>
	<string>5676e49e-71d3-40d3-8090-bb6ddff63d29</string>
</dict>
</plist>
